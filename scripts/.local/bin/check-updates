#!/bin/bash

# Update checker for dnf because I can't be bothered to have gnome-software installed lol

LOG_FILE="/var/tmp/update-checker.log"

check_updates() {
    echo "Checking for updates at $(date)" >> "$LOG_FILE"

    dnf_updates=$(dnf check-update 2>&1)
    dnf_code=$?
    flatpak_updates=$(flatpak remote-ls --updates 2>/dev/null)
    flatpak_code=$?

    if [[ $dnf_code -eq 100 ]] || [[ -n $flatpak_updates ]] ; then
        # Logs
        echo "Updates available:" >> "$LOG_FILE"
        if [ $dnf_code -eq 100 ]; then
            echo -e "$dnf_updates\n\n---\n" >> "$LOG_FILE"
        fi
        echo -e "FLATPAK\n$flatpak_updates" >> "$LOG_FILE"

        # Notification
        flatpak_count=$(echo "$flatpak_updates" | wc -l)
        dnf_count="0"
        if [ $dnf_code -ne 0 ]; then
            dnf_count=$(echo "$dnf_updates" | tail -n +2 | wc -l)
        fi
        update_count=$(echo $flatpak_count+$dnf_count | bc)

        user_action=$(notify-send --app-name=Updates -u critical "Updates Available" "$update_count packages can be updated" \
        --action="update=Update system")
        if [[ $user_action == "update" ]]; then
            ptyxis -x "/home/diogo/.local/bin/update 2>&1 | tee /var/tmp/update"
            update_status=${PIPESTATUS[0]}
            if [[ $update_status -eq 0 ]]; then
                notify-send --app-name=Updates "Update Successful" "System updated successfully"
            else
                notify-send --app-name=Updates -u critical "Update Failed" "System update encountered errors"
            fi
        fi

        return 0
    elif [[ $dnf_code -eq 0 ]] && [[ -z $flatpak_updates ]]; then
        echo "No updates available" >> "$LOG_FILE"
        return 0
    else
        echo "Error checking updates (dnf returned $dnf_code and flatpak returned $flatpak_code):" >> "$LOG_FILE"
        echo "$dnf_updates" >> "$LOG_FILE"
        echo "$flatpak_updates" >> "$LOG_FILE"
        return 1
    fi
}

check_updates